From 19f4cf3c144c4a2b6e2e758c601fc3976e9baa39 Mon Sep 17 00:00:00 2001
From: David Abdurachmanov <davidlt@cern.ch>
Date: Wed, 11 Mar 2015 11:43:02 +0100
Subject: [PATCH 1/1] Remove `operator void*() const` from CINT if compiled in
 C++11 mode (GCC 5)

`std::basic_ios` had `operator void*() const` until C++11 and after that
`explicit operator bool() const`. libstdc++ with GCC 5 finally cleans up
things to be more compliant with C++11 standard. This is required if ROOT5
is compiled in C++11 mode (--enable-c++11) on GCC 5.

Signed-off-by: David Abdurachmanov <davidlt@cern.ch>
---
 cint/cint/src/dict/gcc4strm.cxx | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/cint/cint/src/dict/gcc4strm.cxx b/cint/cint/src/dict/gcc4strm.cxx
index 2bc8d43..4db0264 100644
--- a/cint/cint/src/dict/gcc4strm.cxx
+++ b/cint/cint/src/dict/gcc4strm.cxx
@@ -1047,11 +1047,14 @@ static int G__G__stream_13_0_8(G__value* result7, G__CONST char* funcname, struc
    return(1 || funcname || hash || result7 || libp) ;
 }
 
+#if __cplusplus < 201103L
+// operator void*() const is only available until C++11. Starting C++11 it's replaced with explicit operator bool() const
 static int G__G__stream_13_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
 {
       G__letint(result7, 89, (long) ((const basic_ios<char,char_traits<char> >*) G__getstructoffset())->operator void*());
    return(1 || funcname || hash || result7 || libp) ;
 }
+#endif
 
 static int G__G__stream_13_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
 {
@@ -4097,7 +4100,10 @@ static void G__setup_memfuncbasic_ioslEcharcOchar_traitslEchargRsPgR(void) {
    G__memfunc_setup("clear",519,G__G__stream_13_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'ios_base::iostate' 0 'goodbit' state", (char*)NULL, (void*) NULL, 0);
    G__memfunc_setup("setstate",877,G__G__stream_13_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'ios_base::iostate' 0 - state", (char*)NULL, (void*) NULL, 0);
    G__memfunc_setup("rdstate",759,G__G__stream_13_0_8, 105, -1, G__defined_typename("ios_base::iostate"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
+#if __cplusplus < 201103L
+// operator void*() const is only available until C++11. Starting C++11 it's replaced with explicit operator bool() const
    G__memfunc_setup("operator void*",1384,G__G__stream_13_0_9, 89, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
+#endif
    G__memfunc_setup("operator!",909,G__G__stream_13_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
    G__memfunc_setup("good",425,G__G__stream_13_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
    G__memfunc_setup("eof",314,G__G__stream_13_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
-- 
1.8.2

