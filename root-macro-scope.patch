diff --git a/core/meta/src/TClingCallbacks.cxx b/core/meta/src/TClingCallbacks.cxx
index 85f39dd..2650f96 100644
--- a/core/meta/src/TClingCallbacks.cxx
+++ b/core/meta/src/TClingCallbacks.cxx
@@ -552,16 +552,22 @@ bool TClingCallbacks::tryResolveAtRuntimeInternal(LookupResult &R, Scope *S) {
    assert(TU && "Must not be null.");
 
    // DynamicLookup only happens inside wrapper functions:
-   clang::DeclContext* WrapperDC = S->getEntity();
    clang::FunctionDecl* Wrapper = nullptr;
-   while (true) {
-      if (!WrapperDC || WrapperDC == TU)
+   Scope* Cursor = S;
+   do {
+      DeclContext* DCCursor = Cursor->getEntity();
+      if (DCCursor == TU)
          return false;
-      Wrapper = dyn_cast<FunctionDecl>(WrapperDC);
-      if (Wrapper && utils::Analyze::IsWrapper(Wrapper))
-          break;
-      WrapperDC = WrapperDC->getParent();
-   }
+      Wrapper = dyn_cast_or_null<FunctionDecl>(DCCursor);
+      if (Wrapper) {
+         if (utils::Analyze::IsWrapper(Wrapper)) {
+            break;
+         } else {
+            // Can't have a function inside the wrapper:
+            return false;
+         }
+      }
+   } while ((Cursor = Cursor->getParent()));
 
    VarDecl* Result = VarDecl::Create(C, TU, Loc, Loc, II, C.DependentTy,
                                      /*TypeSourceInfo*/0, SC_None);
